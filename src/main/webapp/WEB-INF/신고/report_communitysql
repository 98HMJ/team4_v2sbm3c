DROP TABLE REPORT_COMMUNITY CASCADE CONSTRAINTS;
DROP TABLE REPORT_COMMUNITY;
CREATE TABLE REPORT_COMMUNITY(
		REPORTNO                       		NUMBER(10)		 NOT NULL		 PRIMARY KEY,
		CONTENTS                      		VARCHAR2(2000)   NOT NULL,
        RDATE                         		DATE		     NOT NULL,
        COMMUNITYNO                   		NUMBER(10)		 NULL ,
		MEMBERNO                      		NUMBER(10)		 NULL ,
  FOREIGN KEY (COMMUNITYNO) REFERENCES COMMUNITY (COMMUNITYNO),
  FOREIGN KEY (MEMBERNO) REFERENCES MEMBER (MEMBERNO)
    ON DELETE CASCADE
);


COMMENT ON TABLE REPORT_COMMUNITY is '커뮤니티 신고';
COMMENT ON COLUMN REPORT_COMMUNITY.REPORTNO is '신고 번호';
COMMENT ON COLUMN REPORT_COMMUNITY.CONTENTS is '신고 내용';
COMMENT ON COLUMN REPORT_COMMUNITY.RDATE is '신고 시간';
COMMENT ON COLUMN REPORT_COMMUNITY.COMMUNITYNO is '커뮤니티번호';
COMMENT ON COLUMN REPORT_COMMUNITY.MEMBERNO is '회원번호';

DROP SEQUENCE community_reportno;

CREATE SEQUENCE community_report_seq
  START WITH 1                -- 시작 번호
  INCREMENT BY 1            -- 증가값
  MAXVALUE 9999999999  -- 최대값: 9999999999 --> NUMBER(10) 대응
  CACHE 2                        -- 2번은 메모리에서만 계산
  NOCYCLE;                      -- 다시 1부터 생성되는 것을 방지

INSERT INTO report_community(reportno, contents, rdate, communityno, memberno)
VALUES(community_report_seq.nextval, '신고합니다.', sysdate, 1, 1);

commit;

SELECT * FROM report_community;

-- 목록: 모든 목록 최신 순서로 조회
SELECT reportno, contents, rdate, communityno, memberno
FROM report_community
ORDER BY rdate DESC;

-- 목록 : 멤버별 신고한 목록
SELECT reportno, contents, rdate, communityno, memberno
FROM report_community
WHERE memberno = 10;

-- 조회: 신고 내역 조회
SELECT reportno, contents, rdate, communityno, memberno
FROM report_community
WHERE reportno = 3;
