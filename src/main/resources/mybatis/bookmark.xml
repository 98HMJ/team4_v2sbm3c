<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="dev.mvc.bookmark.BookmarkDAOInter">
  <!-- insert 커뮤니티 북마크 삽입 -->
  <insert id="create_community" parameterType="dev.mvc.bookmark.BookmarkVO">
    INSERT INTO bookmark(bookmarkno, rdate, url, communityno, trashno, memberno)
    VALUES (bookmark_seq.nextval, sysdate, #{url}, #{communityno}, null, #{memberno})
  </insert>
  
  <!-- 북마크 되어있는지 확인 - 커뮤니티 -->
  <select id="check_community" parameterType="dev.mvc.bookmark.BookmarkCheckCommunityVO" resultType="int">
    SELECT COUNT(bookmarkno) as cnt
    FROM bookmark
    WHERE memberno = #{memberno} and communityno = #{communityno}
  </select>
  
  <!-- 삭제: 커뮤니티 북마크-->
  <delete id="delete_community" parameterType="dev.mvc.bookmark.BookmarkCheckCommunityVO">
    DELETE FROM bookmark
    WHERE memberno = #{memberno} and communityno = #{communityno} 
  </delete>
  
  <!-- insert 쓰레기 북마크 삽입 -->
  <insert id="create_trash" parameterType="dev.mvc.bookmark.BookmarkVO">
    INSERT INTO bookmark(bookmarkno, rdate, url, communityno, trashno, memberno)
    VALUES (bookmark_seq.nextval, sysdate, #{url}, null, #{trashno}, #{memberno})
  </insert>
  
  <!-- 북마크 되어있는지 확인 - 쓰레기 -->
  <select id="check_trash" parameterType="dev.mvc.bookmark.BookmarkCheckTrashVO" resultType="int">
    SELECT COUNT(bookmarkno) as cnt
    FROM bookmark
    WHERE memberno = #{memberno} and trashno = #{trashno}
  </select>
  
  <!-- 삭제: 쓰레기 북마크-->
  <delete id="delete_trash" parameterType="dev.mvc.bookmark.BookmarkCheckTrashVO">
    DELETE FROM bookmark
    WHERE memberno = #{memberno} and trashno = #{trashno} 
  </delete>
  
  <!-- 북마크 되어있는지 확인 - 커뮤니티 -->
  <select id="list_all" parameterType="int" resultType="dev.mvc.bookmark.BookmarkListVO">
    SELECT b.bookmarkno, 
           COALESCE(tc.name, cc.name) AS category_name, 
           b.rdate, 
           b.url, 
           COALESCE(b.trashno, b.communityno) AS ref_no, 
           b.memberno,
           CASE 
               WHEN b.trashno IS NOT NULL THEN 'trash' 
               ELSE 'community' 
           END AS board
    FROM bookmark b
    LEFT JOIN trash t ON b.trashno = t.trashno
    LEFT JOIN trashcate tc ON t.trashcateno = tc.trashcateno
    LEFT JOIN community c ON b.communityno = c.communityno
    LEFT JOIN communitycate cc ON c.communitycateno = cc.communitycateno
    WHERE b.memberno = #{memberno}
  </select>
  
  <!--  조회: 북마크 검색(카테고리) -->
  <select id="list_by_search" parameterType="HashMap" resultType="dev.mvc.bookmark.BookmarkVO">
    SELECT b.bookmarkno, 
       COALESCE(tc.name, cc.name) AS category_name, 
       b.rdate, 
       b.url, 
       COALESCE(b.trashno, b.communityno) AS ref_no, 
       b.memberno,
       CASE 
           WHEN b.trashno IS NOT NULL THEN 'trash' 
           ELSE 'community' 
       END AS board
    FROM bookmark b
    LEFT JOIN trash t ON b.trashno = t.trashno
    LEFT JOIN trashcate tc ON t.trashcateno = tc.trashcateno
    LEFT JOIN community c ON b.communityno = c.communityno
    LEFT JOIN communitycate cc ON c.communitycateno = cc.communitycateno
    <choose>
      <when test="word!=null and word!=''">
        WHERE b.memberno = #{memberno}
        AND (UPPER(COALESCE(tc.name, cc.name))) LIKE '%' || UPPER(#{word}) || '%'
      </when>
      <otherwise>
        WHERE b.memberno = #{memberno}
      </otherwise>
    </choose>
  </select>
  
  <select id="list_by_memberno_search_paging" parameterType="HashMap" resultType="dev.mvc.bookmark.BookmarkListVO">
    SELECT *
    FROM (
        SELECT b.bookmarkno, 
         COALESCE(tc.name, cc.name) AS category_name, 
         b.rdate, 
         b.url, 
         COALESCE(b.trashno, b.communityno) AS ref_no, 
         b.memberno,
         CASE 
             WHEN b.trashno IS NOT NULL THEN 'trash' 
             ELSE 'community' 
         END AS board,
         ROW_NUMBER() OVER (ORDER BY b.rdate DESC) AS r
      FROM bookmark b
      LEFT JOIN trash t ON b.trashno = t.trashno
      LEFT JOIN trashcate tc ON t.trashcateno = tc.trashcateno
      LEFT JOIN community c ON b.communityno = c.communityno
      LEFT JOIN communitycate cc ON c.communitycateno = cc.communitycateno
      <choose>
        <when test="word != null and word != ''">
          WHERE b.memberno = #{memberno}
          AND (UPPER(COALESCE(tc.name, cc.name))) LIKE '%' || UPPER(#{word}) || '%'
        </when>
        <otherwise>
          WHERE b.memberno = #{memberno}
        </otherwise>
      </choose>
    )
    WHERE r BETWEEN #{start_num} AND #{end_num}
  </select>
  
  <select id="list_by_memberno_search_cnt" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt
    FROM bookmark b
    LEFT JOIN trash t ON b.trashno = t.trashno
    LEFT JOIN trashcate tc ON t.trashcateno = tc.trashcateno
    LEFT JOIN community c ON b.communityno = c.communityno
    LEFT JOIN communitycate cc ON c.communitycateno = cc.communitycateno
    <choose>
      <when test="word!=null and word!=''">
        WHERE b.memberno = #{memberno}
        AND (UPPER(COALESCE(tc.name, cc.name))) LIKE '%' || UPPER(#{word}) || '%'
      </when>
      <otherwise>
        WHERE b.memberno = #{memberno}
      </otherwise>
    </choose>
    ORDER BY b.bookmarkno DESC
  </select>
  
</mapper> 